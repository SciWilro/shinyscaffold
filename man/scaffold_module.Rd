% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/scaffold_app.R
\name{scaffold_module}
\alias{scaffold_module}
\title{Create Shiny module boilerplate code}
\usage{
scaffold_module(app_dir, template, module_config, overwrite = FALSE)
}
\arguments{
\item{app_dir}{Path to root directory of the Shiny app}

\item{template}{Template to use for the module. Use \code{list_mod_templates}
to list available module templates.}

\item{module_config}{Configuration of the module in the form of a list, e.g.
\code{list(id = "overview", name = "Overview Module")}}

\item{overwrite}{Logical indicating whether existing module files should be
overwritten. Default is \code{FALSE}.}
}
\description{
Creates the boilerplate code for a Shiny module
}
\details{
The function creates a directory in \code{<APP_ROOT>/modules/<MODULE_ID>} in
which seperate files \code{ui.R}, \code{server.R}, \code{global.R},
\code{utils.R} and \code{help.R} are created. The files contain boilerplate
code to setup the module along with some basic examples to describe the usage
of the module. To include the module, the module's \code{global.R} must be
sourced in the app's main \code{global.R} and the module's UI and server
functions need to be called in the app's main \code{ui.R} and
\code{server.R} files.
}
\examples{
module_conf <- list(
  id = "overview",
  name = "Overview"
)
scaffold_module("app", "blankpage", module_conf)
}
